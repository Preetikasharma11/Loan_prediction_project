   "source": [
    "import streamlit as st\n",
    "import joblib\n",
    "import pandas as pd\n",
    "\n",
    "# 🚀 Load the trained model (must be in the same folder)\n",
    "model = joblib.load(\"loan_model_xgb.pkl\")\n",
    "\n",
    "# 🎯 Prediction function\n",
    "def predict_loan_approval(model, input_data):\n",
    "    input_df = pd.DataFrame([input_data])\n",
    "    prediction = model.predict(input_df)[0]\n",
    "    return \"✅ Loan Approved\" if prediction == 1 else \"❌ Loan Not Approved\"\n",
    "\n",
    "# 🖼 Title of the web app\n",
    "st.title(\"🏦 Loan Approval Prediction App\")\n",
    "st.markdown(\"Check if your loan will be approved by filling in the details below.\")\n",
    "\n",
    "# 📥 Input fields\n",
    "gender = st.selectbox(\"Gender\", [1, 0])  # 1 = Male, 0 = Female\n",
    "married = st.selectbox(\"Married\", [1, 0])  # 1 = Yes, 0 = No\n",
    "education = st.selectbox(\"Education\", [1, 0])  # 1 = Graduate, 0 = Not Graduate\n",
    "self_employed = st.selectbox(\"Self Employed\", [1, 0])\n",
    "applicant_income = st.number_input(\"Applicant Income\", min_value=0)\n",
    "coapplicant_income = st.number_input(\"Coapplicant Income\", min_value=0)\n",
    "loan_amount = st.number_input(\"Loan Amount (in thousands)\", min_value=0)\n",
    "loan_term = st.number_input(\"Loan Term (in months)\", min_value=0)\n",
    "credit_history = st.selectbox(\"Credit History\", [1.0, 0.0])\n",
    "\n",
    "# 🔢 Dependents (from One-Hot Encoding)\n",
    "dependents_1 = st.checkbox(\"Has 1 Dependent\")\n",
    "dependents_2 = st.checkbox(\"Has 2 Dependents\")\n",
    "dependents_3p = st.checkbox(\"Has 3+ Dependents\")\n",
    "\n",
    "# 🏘 Property Area (from One-Hot Encoding)\n",
    "property_semiurban = st.checkbox(\"Lives in Semiurban Area\")\n",
    "property_urban = st.checkbox(\"Lives in Urban Area\")\n",
    "\n",
    "# 🧾 Collect all input values into a dictionary\n",
    "input_data = {\n",
    "    \"Gender\": gender,\n",
    "    \"Married\": married,\n",
    "    \"Education\": education,\n",
    "    \"Self_Employed\": self_employed,\n",
    "    \"ApplicantIncome\": applicant_income,\n",
    "    \"CoapplicantIncome\": coapplicant_income,\n",
    "    \"LoanAmount\": loan_amount,\n",
    "    \"Loan_Amount_Term\": loan_term,\n",
    "    \"Credit_History\": credit_history,\n",
    "    \"Dependents_1\": dependents_1,\n",
    "    \"Dependents_2\": dependents_2,\n",
    "    \"Dependents_3+\": dependents_3p,\n",
    "    \"Property_Area_Semiurban\": property_semiurban,\n",
    "    \"Property_Area_Urban\": property_urban\n",
    "}\n",
    "\n",
    "# 🔘 Predict button\n",
    "if st.button(\"Predict Loan Status\"):\n",
    "    result = predict_loan_approval(model, input_data)\n",
    "    st.success(f\"Prediction Result: {result}\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "8727783f-eaa3-4e31-a1a2-fa3c5cbde476",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
